{"version":3,"file":"static/js/968.3e962732.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","Pages/Contacts/Contacts.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","Pages/Contacts/Contacts.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filters;","\nimport styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 100%;\n  width: 500px;\n  gap: 12px;\n  margin-bottom: 8px;\n  padding: 4px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-width: 100%;\n  width: 500px;\n  color: #063a36;\n`;\n\nexport const Input = styled.input`\n  padding: 4px 8px;\n  border-radius: 18px;\n  background-color: #7ca78c;\n  color: #fff;\n  border: none;\n`;\nexport const Button = styled.button`\n  border-radius: 8px;\n  margin-top: 0.5em;\n  // gap: 8px;\n  padding: 4px 8px;\n  cursor: pointer;\n  background-color: #7ca78c;\n  color: #fff;\n  border: none;\n`;\n","\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectContactsList } from 'redux/selectors';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport PropTypes from 'prop-types';\nimport { Notify } from 'notiflix';\n\nimport { Form, Input, Label, Button } from './ContactForm.styled';\n\nexport const ContactForm = ({ onCloseModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const formName = e.target.elements.name.value;\n    const formNumber = e.target.elements.number.value;\n\n    if (contacts.some(({ name }) => name === formName)) {\n      return alert(`${formName} is already in contacts`);\n    }\n\n    if (contacts.some(({ phone }) => phone === formNumber)) {\n      return alert(`${formNumber} is already in contacts`);\n    }\n\n    // dispatch(addContact({ name: formName, phone: formNumber }));\n    dispatch(addContact({ name: formName, number: formNumber.toString() }))\n    .unwrap()\n    .then(originalPromiseResult => {\n      Notify.success(\n        `${originalPromiseResult.name} successfully added to contacts`\n      );\n    })\n    .catch(() => {\n      Notify.failure(\"Sorry, something's wrong\");\n    });\n    onCloseModal();\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n          value={contacts.name}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter number\"\n          value={contacts.number}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\nContactForm.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n};\n","\nimport styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #063a36;\n  margin-left: 28px;\n`;\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 8px;\n  border: 0;\n  border-radius: 8px;\n  color: #fff;\n  background-color: #7ca78c;\n`;","\n\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setContactsFilter  } from 'redux/filter/filter-slice';\nimport { selectContactsFilter } from 'redux/selectors';\n\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const handleChangeFilter = ({ currentTarget: { value } }) => {\n    const normalizedValue = value.toLowerCase().trim();\n    dispatch(setContactsFilter (normalizedValue));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </Label>\n  );\n};","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: #063a36;\n`;\n\nexport const ContactName = styled.p`\n  margin: 0;\n  font-weight: 500;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-left: 10px;\n`;\n\nexport const Button = styled.button`\n  margin: 8px;\n  padding: 4px 14px;\n  border: none;\n  border-radius: 8px;\n  color: #fff;\n  background-color: #7ca78c;\n  cursor: pointer;\n  :hover,\n  :focus {\n    color: #000000;\n    background: #fabb18;\n  }\n`;","import PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/contacts-operations';\n\nimport {\n  ContactItem,\n  ContactName,\n  ContactNumber,\n  Button,\n} from './ContactListItem.styled';\n\nexport const ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = userId => {\n    dispatch(deleteContact(userId));\n  };\n\n  return (\n    <ContactItem key={id}>\n      <ContactName>\n        {name}:<ContactNumber>{number}</ContactNumber>\n      </ContactName>\n      <Button onClick={() => handleDeleteContact(id)}>Delete</Button>\n    </ContactItem>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};","\nimport styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  padding: 0;\n  margin: 0;\n`;","\nimport { useSelector } from 'react-redux';\n\nimport { selectContactsFilter, selectContactsList } from 'redux/selectors';\n\nimport { ContactsListItem } from '../ContactListItem/ContactListItem';\n\nimport { ContactsList } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n  const visibleContacts = [\n    ...contacts.filter(contact => contact.name.toLowerCase().includes(filter)),\n  ];\n\n  console.log(visibleContacts);\n\n  return (\n    <ContactsList>\n      {visibleContacts.map(({ name, number, id }) => (\n        <ContactsListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ContactsList>\n  );\n};","import styled from '@emotion/styled';\nimport { FaUserPlus } from 'react-icons/fa';\n\nexport const AddUserIcon = styled(FaUserPlus)`\n  width: 20px;\n  height: 20px;\n\n  fill: #fff;\n`;\nexport const ContentPageContainer = styled.div`\n  padding: 38px 48px;\n  height: 100vh;\n\n  border-radius: 32px 32px 0 0;\n  background-color: #f9f9f9;\n`;\nexport const ContactNavWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 28px;\n`;\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 34px;\n  color:  #7ca78c;\n  \n  margin: 0;\n`;\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 36px;\n\n  color: #000000;\n  background: #efefef;\n  border-radius: 8px;\n  border-style: none;\n\n  :placeholder {\n    color: #757575;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n  font-size: 14px;\n\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: fit-content;\n\n  padding: 1.063em 1.5em;\n  margin-left: 28px;\n\n  color: #fff;\n  background-color: #7ca78c;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: none;\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color:  #fabb18;\n    border: none;\n    > svg {\n      fill: #000000;\n    }\n  }\n`;","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(138.13deg, #22343c75 25.87%, #1f2e3572 100%);\n  z-index: 1200;\n`;\n\nexport const ModalContent = styled.div`\n  border-radius: 25px;\n  overflow: hidden;\n\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n\n  padding-left: 30px;\n  padding-right: 30px;\n  background-color: #f9f9f9;\n`;","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { ModalContent, Overlay } from './Modal.styled';\n\nexport const Modal = ({ children, onCloseModal }) => {\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [onCloseModal]);\n\n  const handleBackdropClick = ({ target, currentTarget }) => {\n    if (currentTarget === target) {\n      onCloseModal();\n    }\n  };\n\n  return (\n    <Overlay onClick={handleBackdropClick}>\n      <ModalContent>{children}</ModalContent>\n    </Overlay>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCloseModal: PropTypes.func,\n};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nimport { Section } from '../../components/Section/Section';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { AddUserIcon, Button, ContactNavWrapper,\n  ContentPageContainer, FilterWrapper, Title,\n} from './Contacts.styled';\nimport { Modal } from 'components/Modal/Modal';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [isShowModalAddUser, setIsShowModalAddUser] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setIsShowModalAddUser(prev => !prev);\n  };\n\n  return (\n    <ContentPageContainer>\n      <Section>\n        <ContactNavWrapper>\n          <Title>Contacts</Title>\n          <FilterWrapper>\n            <Filter />\n            <Button type=\"button\" onClick={handleOpenModal}>\n              <AddUserIcon />\n              New Contact\n            </Button>\n          </FilterWrapper>\n        </ContactNavWrapper>\n        {isLoading && !error && <b>Request in progress</b>}\n        <ContactList />\n      </Section>\n      {isShowModalAddUser && (\n        <Modal\n          children={\n            <Section title=\"Add New Contact\">\n              <ContactForm onCloseModal={handleOpenModal} />\n            </Section>\n          }\n          onCloseModal={handleOpenModal}\n        ></Modal>\n      )}\n    </ContentPageContainer>\n  );\n};\n\nexport default Contacts;","import styled from '@emotion/styled';\n\n\nexport const SectionWrapper = styled.section`\n  display: grid;\n  justify-content: center;\n  justify-items: center;\n  margin: auto;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  max-width: 100%;\n  width: 600px;\n`;\n\nexport const Title = styled.h1`\n  margin: 0;\n  margin-bottom: 8px;\n  text-align: center;\n  color:  #7ca78c;\n  font-size: 32px;\n`;\n\n\n","import React from 'react';\nimport { SectionWrapper, Title } from './Section.styled';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionWrapper>\n      <Title>{title}</Title>\n      {children}\n    </SectionWrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any.isRequired,\n};"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","ContactForm","_ref","onCloseModal","dispatch","useDispatch","useSelector","_jsxs","onSubmit","e","preventDefault","form","target","formName","elements","name","value","formNumber","number","some","_ref2","alert","concat","_ref3","phone","addContact","toString","unwrap","then","originalPromiseResult","Notify","catch","reset","autoComplete","children","_jsx","type","pattern","title","required","placeholder","Filter","filter","onChange","normalizedValue","currentTarget","toLowerCase","trim","setContactsFilter","ContactItem","ContactName","ContactNumber","ContactsListItem","id","onClick","userId","deleteContact","ContactsList","ContactList","visibleContacts","_toConsumableArray","contact","includes","console","log","map","AddUserIcon","FaUserPlus","ContentPageContainer","ContactNavWrapper","Title","FilterWrapper","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","Overlay","ModalContent","Modal","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","_useState","useState","_useState2","_slicedToArray","isShowModalAddUser","setIsShowModalAddUser","fetchContacts","handleOpenModal","prev","Section","SectionWrapper"],"sourceRoot":""}